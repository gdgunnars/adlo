			------------------------------------------
			|			Pathlib Cheatsheet			 |
			------------------------------------------

>>> from pathlib import Path
>>> p = Path()
>>> p
WindowsPath('.')
>>> p.resolve()
WindowsPath('C:/Users/Hlynur Stefánsson/Dropbox/HR/Haust 2016/Forritunarmálið Python/Verkefni 4/adlo')
>>> p = p.resolve()
>>> p


WindowsPath('C:/Users/Hlynur Stefánsson/Dropbox/HR/Haust 2016/Forritunarmálið Python/Verkefni 4/adlo')
>>> p.parent
WindowsPath('C:/Users/Hlynur Stefánsson/Dropbox/HR/Haust 2016/Forritunarmálið Python/Verkefni 4')
>>> p.parent.parent
WindowsPath('C:/Users/Hlynur Stefánsson/Dropbox/HR/Haust 2016/Forritunarmálið Python')
>>> p.name
'adlo'
>>> p.parts
('C:\\', 'Users', 'Hlynur Stefánsson', 'Dropbox', 'HR', 'Haust 2016', 'Forritunarmálið Python', 'Verkefni 4', 'adlo')


>>> new_dir = p / 'new_dir'
>>> new_dir.exists()
False
>>> new_dir.mkdir()
>>> new_dir.exists()
True
>>> new_dir.is_file()
False
>>> new_dir.is_dir()
True


# Directory sem er sett á þessa breytu
>>> new_dir
WindowsPath('C:/Users/Hlynur Stefánsson/Dropbox/HR/Haust 2016/Forritunarmálið Python/Verkefni 4/adlo/new_dir')


# Current working directory
>>> new_dir.cwd()
WindowsPath('C:/Users/Hlynur Stefánsson/Dropbox/HR/Haust 2016/Forritunarmálið Python/Verkefni 4/adlo')


# Eyða skrá
>>> (new_dir / 'file.txt').unlink()


# Eyða möppu (virkar bara ef hún er tóm)
>>> new_dir.rmdir()

# Glob, hérna er fundið allar skrár í cwd sem enda á .py
>>> list(p.glob('*.py'))
[WindowsPath('C:/Users/Hlynur Stefánsson/Dropbox/HR/Haust 2016/Forritunarmálið Python/Verkefni 4/adlo/adlo.py')]

# Recursive, finna allt sem endar á .py í þessari möppu og öllum undirmöppum
>>> list(p.glob('**/*.py'))
[WindowsPath('C:/Users/Hlynur Stefánsson/Dropbox/HR/Haust 2016/Forritunarmálið Python/Verkefni 4/adlo/adlo.py')]

# Finna öll file og folder í þessari möppu og öllum undirmöppum
>>> all_files = list(p.glob('**/*'))
>>> len(all_files)
51

# Öll files
>>> len([x for x in all_files if x.is_file()])
32

# Öll folder
>>> len([x for x in all_files if x.is_dir()])
19

# Lesa innihald allra skráa
>>> all_data = [x.read_text(errors='ignore') for x in all_files if x.is_file()]
>>> all_data[1]
"from guessit import guessit\nfrom pathlib import Path\n\n\ndef adlo(directory):\n    \n    guessit_keys = ['title', 'season', 'episode', 'episode_title', 'type']\n\n    print(Path().resolve() / directory)\n"


# Skrifa í skrá, býr hana til ef hún er ekki núþegar til
>>> (p / 'new_file').write_text('This is a new file!')
19
>>> (p / 'new_file').read_text()
'This is a new file!'
>>> (p / 'new_file').is_file()
True
>>> (p / 'new_file').unlink()
>>> (p / 'new_file').exists()
False


			------------------------------------------
			|			Shutil Cheatsheet			 |
			------------------------------------------

>>> import shutil

# copy virkar svipað og Linux copy skipunin, hér er verið að copy-a adlo.py í sama folderi og þá er hún rename-uð í copy.py
>>> shutil.copy('adlo.py', 'copy.py')
'copy.py'

# Hér bý ég til möppuna 'new_dir' og copya 'adlo.py' yfir í hana
>>> p = Path().resolve()
>>> (p / 'new_dir').mkdir()
>>> shutil.copy('adlo.py', 'new_dir')
'new_dir\\adlo.py'

# Copy-a möppu og allt innihald yfir í nýja möppu
>>> shutil.copytree('new_dir', 'new_dir2')
'new_dir2'

# Eyða möppu recursively og öllum gögnum þar undir
>>> shutil.rmtree('new_dir2')

# Færa file yfir í möppu en ef það er ekki tiltekið folder til að færa möppuna í þá virkar þetta eins og rename 
>>> shutil.move('copy.py', 'new_file')
'new_file'
